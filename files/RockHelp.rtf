{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Here are some of my (ROCK related) hangups that caused some frustration on my end for running SimpleRock\
\
Hopefully you have two drives when you are installing rock on barebones hardware. This is for two reasons.\
	1. You allocate a whole drive to /data and get full control of the size of the directory\
	2. When you nuke your build to SimpleRock or something crashes (happens) you don\'92t lose your dataset\
\
Here\'92s how to do this:\
	first make sure you have another drive\
	```df -h``` OR ```fdisk -l```\
	and you should see a /dev/sd_ (something)\
	if these don\'92t return any results, try doing sudo before\
	\
	The install scripts create a /data so just ```mv /data /data2```\
	\
	``mkdir /data``` directory. The first one has some SELinux shenanigans that would make this harder\
	\
	```disk /dev/sd_``` \'93_\'94 is whatever you found when you did either a ```df -h``` or ```fdisk -l```\
	```n``` for new partition\
	```p``` for primary\
	```enter```to accept the default\
	```enter ```to say yes start here\
	```enter ```to end at the default\
	```w``` Writes the changes.\
\
	You have now allocated the space. But now that directory needs a file system.\
	Make filesystem xfs and put it on the partition you just allocated\
	```mkfs.xfs /dev/sd_#``` Where # is the partition number you created \
	#Note if you have used this drive for something before you may need to force it. It will throw an error and tell  you which switch to use. \
	\
	Next you need the block id\
	```blkid /dev/sd_#``` \
	Copy the whole ```UUDI=\'93SOME-String-of-garbage\'94```\
	\
	fstab is the file that tells linux about your partitions and your storage so it needs to know about this new partition\
\
	```sudo vim /etc/fstab```  and at the end of the file put:\
	``UUDI=\'93SOME-String-of-garbage\'94	/data	xfs	defaults	0 0\
	Note those are tabs between each section (except for the 0\'92s thats a space)\
\
	now we mount it with ```mount /data```\
\
	One thing remains. I you look into your /data2 directory you will see it still has the stuff  you need in the /data file but you want the security contexts that are set up during the chef install to be copied over\
	just do ```rsync -av /data2/ /data/``` \
\
	validate that works with ```ls -lZ data```\
	```/data/snort``` should have a context like:\
	```unconfined_u:object_r:snort_log_t:s0```\
\
	now do a ```rock_start``` and you (should) be good to go.\
\
Something just to make your life easier. Symbolic links\
	Rather than having to type ```/usr/local/bin/rock_command``` every time you want to do something with rock it would behoove you to make a symbolic link. Just do\
	```ln -s /usr/local/bin/ /bin``` and that will make your life easier\
\
\
The last issue I had on collection was that I didn\'92t have a ```eth0``` interface. Therefore bro won\'92t run for you at all. If you run a rock_start and it doesn\'92t work, you should first do some bro troubleshooting first.  So that is done with ```broctl status``` and it should give you some information. if you do a ```broctl start``` it might say something like ```bro stopped immediately after starting ``` you probably have an interface issue. \
\
*Note* - Once again you might want to create a symbolic link between ```/opt/bro/bin``` and your own ```/bin``` directory\
\
To change the interface which is an easily fixed issue just change the node config at ```/opt/bro/etc/node.cfg``` to your collection interface.\
\
If you don\'92t know how to get the name of your collection interface just do an ```ifconfig``` and it will give you a list of them. If you have two NICs on your machine then you will probably have two interfaces named the same. And one of them will have an IP address. \
\
The collection interface will also need to be put into promiscuous mode \
just do ``ifconfig IF_NAME promisc```\
\
And for validation just do ```netstat -i``` and look at the Flag part. It should have a ```P``` in it if the interface is in promiscuous mode\
\
\
\
\
 \
		}